@import 'variables';

// Mixin pour les polices
@mixin font-size($size, $line-height: $base-line-height) {
  font-size: $size;
  line-height: $line-height;
}

// Nouveau mixin pour les boutons en utilisant la map
@mixin btn-style($btn-type) {
  $styles: map-get($btn-styles, $btn-type);
  
  background-color: map-get($styles, bg);
  color: map-get($styles, text);
  border: none;
  border-radius: $border-radius-md;
  padding: 0.5rem 1rem;
  font-size: $base-font-size;
  cursor: pointer;
  transition: background-color $transition-duration, color $transition-duration;

  &:hover {
    background-color: map-get($styles, hover-bg);
    color: map-get($styles, hover-text);
  }

  &:active {
    background-color: map-get($styles, active-bg);
  }

  &:disabled {
    background-color: map-get($styles, disabled-bg);
    color: map-get($styles, disabled-text);
    cursor: not-allowed;
  }
}

// Mixin pour centrer avec flexbox
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mixin pour les media queries
@mixin responsive($breakpoint) {
  $size: map-get($breakpoints, $breakpoint);
  @media (max-width: $size) { 
    @content; 
  }
}

// Mixin pour les transitions
@mixin transition($property, $duration: $transition-duration, $ease: $transition-timing-function) {
  transition: $property $duration $ease;
}

// Mixin pour les ombres complexes
@mixin box-shadow-complex {
  box-shadow: $box-shadow-complex;
}
